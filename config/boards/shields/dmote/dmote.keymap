#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
	combos {
		compatible = "zmk,combos";
		combo_semicolon {
			timeout-ms = <50>;
			key-positions = <7 8>;
			bindings = <&kp SEMICOLON>;
		}; //colon still unknown... and we have one free spot in the corner. maybe colon at?
		//wait a sec. can't all modmorphs be implemented as combos? colon can be wherever lalt is + where dot is.
		//what is  the difference between modmorph, layer, and combo?
	};
	behaviors {
		mipl: minus_plus {
			compatible = "zmk,behavior-mod-morph";
			label = "MINUS_PLUS";
			#binding-cells = <0>;
			bindings = <&kp KP_MINUS>, <&kp KP_PLUS>;
			mods = <(MOD_LSFT)>;
		};
		dimu: divide_multiply {
			compatible = "zmk,behavior-mod-morph";
			label = "DIVIDE_MULTIPLY";
			#binding-cells = <0>;
			bindings = <&kp KP_DIVIDE>, <&kp KP_MULTIPLY>;
			mods = <(MOD_LSFT)>;
		};
		spta: space_tab {
			compatible = "zmk,behavior-mod-morph";
			label = "SPACE_TAB";
			#binding-cells = <0>;
			bindings = <&kp SPACE>, <&kp TAB>;
			mods = <(MOD_LSFT)>;
		};
		eqqu: equal_question {
			compatible = "zmk,behavior-mod-morph";
			label = "EQUAL_QUESTION";
			#binding-cells = <0>;
			bindings = <&kp EQUAL>, <&kp QUESTION>;
			mods = <(MOD_LSFT)>;
		};
		dotan: dot_ampersand {
			compatible = "zmk,behavior-mod-morph";
			label = "DOT_AMPERSAND";
			#binding-cells = <0>;
			bindings = <&kp DOT>, <&kp AMPERSAND>;
			mods = <(MOD_LSFT)>;
		};
		compi: comma_pipe {
			compatible = "zmk,behavior-mod-morph";
			label = "COMMA_PIPE";
			#binding-cells = <0>;
			bindings = <&kp COMMA>, <&kp PIPE>;
			mods = <(MOD_LSFT)>;
		};
	};
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
				&none  &none  &kp  F &kp  M &kp  P &kp  V            &eqqu  &dotan &compi &kp SQT &none  &none 
				&none  &kp  J &kp  S &kp  N &kp  D &kp  W            &dimu  &kp  A &kp  E &kp  I &none &none 
				&none  &kp  R &kp  G &kp  L &kp  C &kp  B            &mipl  &kp  U &kp  O &kp  Y &kp  H &none 
				&none  &kp  X &none  &none  &none                           &none  &none  &none  &kp  K &none 
				                     &none                                         &none 
				                            &kp LSHFT &kp LALT             &none  &none 
				                        &none  &kp  T &none       &none  &spta  &none 
				                            &none  &none             &none  &none 
			>;
		};
	};
};


+++++==&&&&&&&||||||||||||||**///